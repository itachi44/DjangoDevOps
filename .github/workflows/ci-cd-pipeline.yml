name: Pipeline that Build and Push the docker app image

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: itachi44/dj-devops:${{ github.run_number }}
          build-args: |
            SECRET_KEY=${{ secrets.SECRET_KEY }} 
            POSTGRES_USER=${{ secrets.POSTGRES_USER }} 
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} 
            DATABASE_PROD_HOST=${{ secrets.DATABASE_PROD_HOST }} 
            POSTGRES_DB=${{ secrets.POSTGRES_DB }} 
            PRODUCTION_SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }} 
            ENV_MODE=${{ secrets.ENV_MODE }} 
            SECRET_KEY=${{ secrets.SECRET_KEY }} 

      - name: Run a simple test to ensure the application loads correctly
        run: |
          # Use curl to request the home page of your Django app
          response_code=$(curl -s -o /dev/null -w "%{http_code}" http://host.docker.internal:8000/)
          if [ $response_code -eq 200 ]; then
            echo "Application is running and responding correctly."
          else
            echo "Application did not respond as expected (HTTP status code: $response_code)."
            exit 1
          fi

      - name: Push the image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: itachi44/dj-devops:${{ github.run_number }}