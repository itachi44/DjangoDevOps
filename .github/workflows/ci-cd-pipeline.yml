name: Pipeline that Build and Push the docker app image

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Generate .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ./DjDevOps/DjDevOps/settings/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./DjDevOps/DjDevOps/settings/.env
          echo "DATABASE_PROD_HOST=${{ secrets.DATABASE_PROD_HOST }}" >> ./DjDevOps/DjDevOps/settings/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> ./DjDevOps/DjDevOps/settings/.env
          echo "SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }}" >> ./DjDevOps/DjDevOps/settings/.env
          echo "ENV_MODE=${{ secrets.ENV_MODE }}" >> ./DjDevOps/DjDevOps/settings/.env


      - name: Build Docker Compose images
        run: |
          cat ./DjDevOps/DjDevOps/settings/.env
          docker-compose up -f docker-compose-dev.yml --build

      # - name: Build and push Docker image
      #   id: build-image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: itachi44/dj-devops:${{ github.run_number }}
      #     build-args: |
      #       POSTGRES_USER=${{ secrets.POSTGRES_USER }} 
      #       POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} 
      #       DATABASE_PROD_HOST=${{ secrets.DATABASE_PROD_HOST }} 
      #       POSTGRES_DB=${{ secrets.POSTGRES_DB }} 
      #       SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }} 
      #       ENV_MODE=${{ secrets.ENV_MODE }} 

      # - name: Run a simple test to ensure the application loads correctly
      #   run: |
      #     docker run --rm itachi44/dj-devops:${{ github.run_number }} python DjDevOps manage.py test